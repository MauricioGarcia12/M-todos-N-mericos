/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programa1;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class RaizCuadra extends javax.swing.JFrame {

    DefaultTableModel modelo;
    boolean varAuto;
    double errorRelativoIteracion = 1.0;
    double resultado;
    double porcentajeError;
    double aux = 0, auxNum = 0, aux2 = 0, rounded, rounded2 = 0;
    int iteracion = 0;
    boolean valLimpiar;

    public RaizCuadra() {
        initComponents();
        JOptionPane.showMessageDialog(null,"\tBienvenido al calculador de raíz"
                + "\nInstrucciones:"
                + "\n1.No puede colocar letras o caracteres especiales solo números y punto decimal"
                + "\n2.No se aceptan números negativos"
                + "\n3.Sólo en el porcentaje de error se acepta el punto decimal"
                + "\n4.Existen dos típos de modelaje, Usuario y automatico"
                + "\n5.El programa sólo acepta 10 digitos"
                + "\n6.Por favor llene todos los rublos"
                + "\n7.No puede poner más d eun punto decimal en el error%");
        String cabecera[] = {"Número de Iteración", "Error Relativo de Iteración %",
            "Resultado de formula por Iteración"};
        String datos[][] = {};
        modelo = new DefaultTableModel(datos, cabecera);
        tabla.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        botonInicio = new javax.swing.JButton();
        txtValorC = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtValorX = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        spNumeroDecimalesResultado = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        txtPorcentajeError = new javax.swing.JTextField();
        botonLimpiarDatos = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbTipoCalculo = new javax.swing.JComboBox<>();
        botonSalir = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.setBackground(new java.awt.Color(204, 70, 130));
        panel.setMaximumSize(null);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Valor de C:");

        botonInicio.setText("Inicio");
        botonInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInicioActionPerformed(evt);
            }
        });

        txtValorC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorCKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Valor de Inicio: ");

        txtValorX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorXKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Cantidad de decimales en resultado:");

        spNumeroDecimalesResultado.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Porcentaje de Error");

        txtPorcentajeError.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPorcentajeErrorKeyTyped(evt);
            }
        });

        botonLimpiarDatos.setText("Limpiar Datos");
        botonLimpiarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarDatosActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Calcular por Usuario o Automatico: ");

        cbTipoCalculo.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        cbTipoCalculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuario", "Automatico" }));
        cbTipoCalculo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTipoCalculoItemStateChanged(evt);
            }
        });

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        jLabel6.setText("%");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(138, 138, 138)
                                .addComponent(botonInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtValorC)
                                    .addComponent(txtValorX)
                                    .addComponent(spNumeroDecimalesResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(txtPorcentajeError))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6))
                            .addComponent(botonLimpiarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 266, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbTipoCalculo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTipoCalculo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtValorC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtValorX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(spNumeroDecimalesResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPorcentajeError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonLimpiarDatos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonSalir))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        JOptionPane.showMessageDialog(null, "Saliendo del programa");
        System.exit(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void txtValorCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorCKeyTyped
        char c = evt.getKeyChar();
        //Sin punto decimal puros enteros
        if ((c >= 33 && c <= 47) || (c >= 58 && c <= 253) ) {
            evt.consume();
        } else {

        }
    }//GEN-LAST:event_txtValorCKeyTyped

    private void txtValorXKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorXKeyTyped
        char c = evt.getKeyChar();
        //Sin punto decimal puros enteros
        if ((c >= 33 && c <= 47) || (c >= 58 && c <= 253) ) {
            evt.consume();
        } else {
        }
    }//GEN-LAST:event_txtValorXKeyTyped

    private void txtPorcentajeErrorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorcentajeErrorKeyTyped

        char c = evt.getKeyChar();
        //Con punto decimal 
        if ((c >= 33 && c <= 45) || (c == 47) || (c >= 58 && c <= 253) ) {
            evt.consume();
        } else {
        }
    }//GEN-LAST:event_txtPorcentajeErrorKeyTyped

    private void cbTipoCalculoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTipoCalculoItemStateChanged
        if (cbTipoCalculo.getSelectedItem().equals("Automatico")) {

            txtPorcentajeError.setEnabled(false);
            txtValorX.setEnabled(false);
            varAuto = true;//Verdadero significa que va en automatico
            JOptionPane.showMessageDialog(null, "En modo automatico se usará el porcentaje de error del 0.005%");
        }
        else{
            txtPorcentajeError.setEnabled(true);
            txtValorX.setEnabled(true);
            varAuto = false;
        }
    }//GEN-LAST:event_cbTipoCalculoItemStateChanged


    private void botonInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInicioActionPerformed

        if (varAuto == true) {

            porcentajeError = 0.005;
            try{
            int c = Integer.parseInt(txtValorC.getText());
            int decimal1 = (int) (Math.pow(10, (int) spNumeroDecimalesResultado.getValue()));
            double decimal2 = (double) decimal1;
            double cValor = (double) c;
            double conX=Double.parseDouble(txtValorX.getText());
            do {
                auxNum++;
                if (Math.pow(auxNum, 2) > cValor) {

                    break;
                }
                aux = Math.pow(auxNum, 2);

            } while (aux <= cValor);
            // aux2 X pasada aux Xn+1 cValor C
            aux2 = aux;
            do {
                aux = (0.5) * (aux2 + (cValor / aux2));
                errorRelativoIteracion = ((aux - aux2) / aux) * -100;

                aux2 = aux;
                iteracion++;
                rounded = Math.round(aux * decimal1) / decimal2;
                rounded2 = Math.round(errorRelativoIteracion * decimal1) / decimal2;
                if (rounded2 < porcentajeError) {
                    break;
                }
                Object datos[] = {iteracion, rounded2, rounded};
                modelo.addRow(datos);
            } while (porcentajeError <= errorRelativoIteracion);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Siga las indicaciones por favor");
            }
            
            
        } //Código para modo Usuario
        else {
            try{
            porcentajeError = Double.parseDouble(txtPorcentajeError.getText());
            int c = Integer.parseInt(txtValorC.getText());
            int decimal1 = (int) (Math.pow(10, (int) spNumeroDecimalesResultado.getValue()));
            double decimal2 = (double) decimal1;
            if ((int) spNumeroDecimalesResultado.getValue() == 10) {
                decimal1 = 1000000000;
                decimal2 = 1000000000.0;
            }
            System.out.println("decimal entero: " + decimal1);
            System.out.println("decimal double: " + decimal2);
            double cValor = (double) c;
            double x = Double.parseDouble(txtValorX.getText());
            double x2;

            do {
                x2 = (0.5) * (x + (cValor / x));
                errorRelativoIteracion = Math.abs((x2 - x) / x2) * 100;
                x = x2;
                iteracion++;
                rounded = Math.round(x2 * decimal1) / decimal2;
                rounded2 = Math.round(errorRelativoIteracion * decimal1) / decimal2;

                Object datos[] = {iteracion, rounded2, rounded};
                modelo.addRow(datos);
            } while (porcentajeError <= errorRelativoIteracion);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,"Siga las indicaciones por favor");
            }

        }


    }//GEN-LAST:event_botonInicioActionPerformed

    private void botonLimpiarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarDatosActionPerformed
        valLimpiar = true;
        errorRelativoIteracion = 1.0;
        resultado = 0;
        porcentajeError = 0.0;
        aux = 0;
        auxNum = 0;
        aux2 = 0;
        rounded = 0;
        rounded2 = 0;
        iteracion = 0;
        String cabecera[] = {"Número de Iteración", "Error Relativo de Iteración %",
            "Resultado de formula por Iteración"};
        String datos[][] = {};
        modelo = new DefaultTableModel(datos, cabecera);
        tabla.setModel(modelo);

    }//GEN-LAST:event_botonLimpiarDatosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RaizCuadra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RaizCuadra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RaizCuadra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RaizCuadra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RaizCuadra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonInicio;
    private javax.swing.JButton botonLimpiarDatos;
    private javax.swing.JButton botonSalir;
    private javax.swing.JComboBox<String> cbTipoCalculo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel;
    private javax.swing.JSpinner spNumeroDecimalesResultado;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtPorcentajeError;
    private javax.swing.JTextField txtValorC;
    private javax.swing.JTextField txtValorX;
    // End of variables declaration//GEN-END:variables
}
